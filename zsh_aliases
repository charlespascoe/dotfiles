#!/bin/zsh

alias ea='vim ~/.zsh_aliases && . ~/.zsh_aliases'
alias erc='vim ~/.zshrc && . ~/.zshrc'

# Docker
alias doc=docker

# Git
alias x=git
alias xut='x u && x u --tags'
alias ci='EDITOR="vim -c ShowDiff -c startinsert!" git ci'
alias cs='git add -p'


# Tmux
alias start-ssh-agent='killall -q ssh-agent; eval `ssh-agent` && ssh-add'
alias stop-ssh-agent='killall ssh-agent'

alias start-gpg-agent='killall -q gpg-agent; eval `gpg-agent --daemon --options ~/.dotfiles/gpg-agent.conf`'
alias stop-gpg-agent='killall gpg-agent'

alias code='start-ssh-agent && start-gpg-agent && tm code'

alias tmls='tmux ls'
tm() {
    if [ -n "$TMUX" ]; then
        if ! tmux has-session -t $1; then
            tmux -u new -d -s $1
        fi

        tmux -u switch -t $1
    else
        tmux -u new -A -s $1
    fi
}

_tm() {
    local -a sessions
    # sessions=(${${(f)"$(command tmux 2> /dev/null list-sessions)"}/:[ $'\t']##/:})
    sessions=(${(f)"$(command tmux 2> /dev/null list-sessions)"})
    _describe -t sessions 'sessions' sessions "$@"
}
compdef _tm tm

alias tsb='tmux show-buffer'

# Make
alias m=make

# Vim
source ~/.dotfiles/vim_aliases

alias dre='vim -c DraftRTF'

dr() {
    ext=${1:-bn};
    vim -c "Draft $ext"
}

## Edit dictation substitutions
alias eds='vim -c "au BufUnload <buffer> DictationReloadSubstitutions" ~/.vim-conf/dictation_substitutions'


# Edit Serenade Custom Commands
alias esc='vim /Users/charles/.serenade/scripts/custom.js'

# Pasteboard
alias copy=pbcopy
alias paste=pbpaste
alias pbapnl='echo "`paste`" | copy'

epb() {
    if [ -z "$1" ]; then
        pbpaste | vipe | pbcopy
    else
        pbpaste | vipe --suffix "$1"  | pbcopy
    fi
}

# Utils
alias c='clear'
alias n=g
alias hc='history -c'
alias ls='/opt/homebrew/bin/gls -lhG --color=auto --group-directories-first'
alias py='python3'
alias pr='ptpython'
alias fj='python3 -m json.tool'
alias sha256='openssl dgst -sha256'
alias td='nd ~/temp/`date +"%Y-%m-%d"`'
alias uz=unzip

nd() { mkdir -p $1; cd $1; }

nr() {
    # cd "`find ~/repos ~/go/src -type d -maxdepth 1 | sed -e "s/^${HOME:gs/\\//\\\\\\/}/~/" | fzf | sed -e "s/^~/${HOME:gs/\\//\\\\\\/}/"`"
    # NOTE the tab between %a and %N (needed for 'cut')
    # cd "`find ~/repos ~/go/src -type d -maxdepth 1 | xargs stat -f '%a	%N' | sort -nr | cut -f 2 | sed -e "s/^${HOME:gs/\\//\\\\\\/}/~/" | fzf | sed -e "s/^~/${HOME:gs/\\//\\\\\\/}/"`"
    cd "`fd --type d -0 --maxdepth 1 . ~/repos ~/go/src | xargs -0 stat -f '%a	%N' | sort -nr | cut -f 2 | sed -e "s/^${HOME:gs/\\//\\\\\\/}/~/" | fzf | sed -e "s/^~/${HOME:gs/\\//\\\\\\/}/"`"
}

gs() {
    vim -c 'let g:go_template_autocreate = 0' -c "e ~/gotemp/`date +'%F_%H:%M:%S'`.go" -c 'au BufWritePost *.go call RunCode()' -c 'startinsert | call feedkeys("gotempfile\<C-l>")'
}

demo() {
    port="${1:-8000}"
    echo "Running demo for port $port"
    ssh -NR 12345:127.0.0.1:$port vps
}

# Work-specific

excel() {
    file_path="`realpath $1`"
    osascript -e 'tell application "Microsoft Excel"
        activate
        open "'"$file_path"'"
    end tell' > /dev/null
}
